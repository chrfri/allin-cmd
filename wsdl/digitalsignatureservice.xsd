<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://service.ais.swisscom.com/" name="IDigitalSignatureService" targetNamespace="http://service.ais.swisscom.com/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:oasis:names:tc:dss:1.0:core:schema" xmlns="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema"/>
  <xs:element name="PendingRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="ns1:RequestBaseType">
          <xs:sequence/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns2="urn:oasis:names:tc:SAML:1.0:assertion" xmlns:ns1="http://www.w3.org/2000/09/xmldsig#" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion"/>
  <xs:element name="AddTimestamp" type="tns:UpdateSignatureInstructionType"/>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="KeyInfo" type="ns1:KeyInfoType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AdditionalProfile" type="xs:string"/>
  <xs:element name="AdditionalTimeInfo" type="tns:AdditionalTimeInfoType"/>
  <xs:element name="AttachmentReference" type="tns:AttachmentReferenceType"/>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="ns2:NameIdentifierType"/>
        <xs:element minOccurs="0" name="SupportingInfo" type="tns:AnyType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Document" type="tns:DocumentType"/>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:DocumentBaseType">
          <xs:sequence>
            <xs:element minOccurs="0" name="Transforms" type="ns1:TransformsType"/>
            <xs:element minOccurs="0" name="DigestMethod" type="ns1:DigestMethodType"/>
            <xs:element name="DigestValue" type="xs:base64Binary"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Document" type="tns:DocumentType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:sequence/>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean"/>
      <xs:attribute name="ObjId" type="xs:string"/>
      <xs:attribute name="createReference" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
          <xs:element name="Document" type="tns:DocumentType"/>
          <xs:element ref="TransformedData"/>
          <xs:element ref="DocumentHash"/>
          <xs:element name="Other" type="tns:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="Recipient" type="ns2:NameIdentifierType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="KeyInfo" type="ns1:KeyInfoType"/>
        <xs:element minOccurs="0" name="Other" type="tns:AnyType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:string"/>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="tns:AnyType"/>
  <xs:element name="OptionalOutputs" type="tns:AnyType"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="ValidDetail" type="tns:DetailType"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="IndeterminateDetail" type="tns:DetailType"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="InvalidDetail" type="tns:DetailType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SignedProperties" type="tns:PropertiesType"/>
        <xs:element minOccurs="0" name="UnsignedProperties" type="tns:PropertiesType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element minOccurs="0" name="Value" type="tns:AnyType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="ns2:NameIdentifierType"/>
        <xs:element minOccurs="0" name="SupportingInfo" type="tns:AnyType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Response" type="tns:ResponseBaseType"/>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element minOccurs="0" name="ResultMinor" type="xs:anyURI"/>
        <xs:element minOccurs="0" name="ResultMessage" type="tns:InternationalStringType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails" type="xs:anyType"/>
  <xs:element name="ReturnSignerIdentity" type="xs:anyType"/>
  <xs:element name="ReturnSigningTimeInfo" type="xs:anyType"/>
  <xs:element name="ReturnTimestampedSignature" type="tns:UpdateSignatureInstructionType"/>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:sequence/>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:sequence/>
      <xs:attribute name="Type" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnVerificationTimeInfo" type="xs:anyType"/>
  <xs:element name="Schema" type="tns:DocumentType"/>
  <xs:element name="Schemas" type="tns:SchemasType"/>
  <xs:element name="ServicePolicy" type="xs:string"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:RequestBaseType">
          <xs:sequence/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse" nillable="true" type="xs:anyType"/>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Signature" type="ns1:SignatureType"/>
        <xs:element minOccurs="0" ref="tns:Timestamp"/>
        <xs:element minOccurs="0" ref="tns:Base64Signature"/>
        <xs:element minOccurs="0" ref="tns:SignaturePtr"/>
        <xs:element minOccurs="0" name="Other" type="tns:AnyType"/>
      </xs:sequence>
      <xs:attribute name="SchemaRefs">
        <xs:simpleType>
          <xs:list itemType="xs:IDREF"/>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="XPathAfter" type="xs:string"/>
        <xs:element minOccurs="0" name="XPathFirstChildOf" type="xs:string"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:sequence/>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:string"/>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Transforms" type="ns1:TransformsType"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI"/>
      <xs:attribute name="RefId" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tns:SignedReference"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignerIdentity" type="ns2:NameIdentifierType"/>
  <xs:element name="SigningTimeInfo" type="tns:SigningTimeInfoType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Signature" type="ns1:SignatureType"/>
        <xs:element minOccurs="0" name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element minOccurs="0" name="Other" type="tns:AnyType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="TimestampedSignature" type="tns:UpdatedSignatureType"/>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:DocumentBaseType">
          <xs:sequence>
            <xs:element minOccurs="0" name="Transforms" type="ns1:TransformsType"/>
            <xs:element ref="tns:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Document" type="tns:DocumentType"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="Policy" type="xs:anyURI"/>
        <xs:element minOccurs="0" name="ErrorBound" type="xs:duration"/>
        <xs:element default="false" minOccurs="0" name="Ordered" type="xs:boolean"/>
        <xs:element minOccurs="0" name="TSA" type="ns2:NameIdentifierType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="tns:UpdatedSignatureType"/>
  <xs:element name="UseVerificationTime" type="xs:anyType"/>
  <xs:element name="VerificationTimeInfo" type="tns:VerificationTimeInfoType"/>
  <xs:element name="VerifyManifestResults" type="tns:VerifyManifestResultsType"/>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:RequestBaseType">
          <xs:sequence>
            <xs:element minOccurs="0" ref="tns:SignatureObject"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="tns:ResponseBaseType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element minOccurs="0" name="OptionalInputs" type="tns:AnyType"/>
      <xs:element minOccurs="0" ref="tns:InputDocuments"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string"/>
    <xs:attribute name="Profile" type="xs:anyURI"/>
  </xs:complexType>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="tns:Result"/>
      <xs:element minOccurs="0" name="OptionalOutputs" type="tns:AnyType"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="SignResponse">
    <xs:complexContent>
      <xs:extension base="tns:ResponseBaseType">
        <xs:sequence>
          <xs:element minOccurs="0" ref="tns:SignatureObject"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="tns:DocumentBaseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="InlineXML" type="tns:InlineXMLType"/>
          <xs:element minOccurs="0" name="Base64XML" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="EscapedXML" type="xs:string"/>
          <xs:element minOccurs="0" ref="tns:Base64Data"/>
          <xs:element minOccurs="0" name="AttachmentReference" type="tns:AttachmentReferenceType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="DocumentBaseType">
    <xs:sequence/>
    <xs:attribute name="ID" type="xs:ID"/>
    <xs:attribute name="RefURI" type="xs:anyURI"/>
    <xs:attribute name="RefType" type="xs:anyURI"/>
    <xs:attribute name="SchemaRefs">
      <xs:simpleType>
        <xs:list itemType="xs:IDREF"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean"/>
    <xs:attribute name="ignoreComments" type="xs:boolean"/>
  </xs:complexType>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:DigestMethod"/>
      <xs:element minOccurs="0" ref="ns1:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="SigningTimeBoundaries">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LowerBoundary" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="UpperBoundary" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:sequence/>
    <xs:attribute name="Type" type="xs:anyURI"/>
  </xs:complexType>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="tns:UpdateSignatureInstructionType">
        <xs:sequence/>
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:anySimpleType">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="tns:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI"/>
  </xs:complexType>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Schema" type="tns:DocumentType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="tns:Property"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="tns:ManifestResult"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element minOccurs="0" name="Code" type="xs:anyURI"/>
      <xs:element minOccurs="0" name="Message" type="tns:InternationalStringType"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="AdditionalTimeInfo" type="tns:AdditionalTimeInfoType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UseVerificationTimeType">
    <xs:sequence>
      <xs:element minOccurs="0" name="CurrentTime" type="xs:anyType"/>
      <xs:element minOccurs="0" name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:SAML:1.0:assertion" version="1.0">
<xs:complexType name="NameIdentifierType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="NameQualifier" type="xs:string"/>
        <xs:attribute name="Format" type="xs:anyURI"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:com:swisscom:dss:1.0:schema" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns1="http://www.w3.org/2000/09/xmldsig#" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:com:swisscom:dss:1.0:schema">
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#"/>
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema"/>
  <xs:element name="AddOcspResponse" type="ns2:UpdateSignatureInstructionType"/>
  <xs:element name="CertificateRequest" type="tns:CertificateRequestType"/>
  <xs:element name="MobileIDAPTransID" type="xs:string"/>
  <xs:element name="SignatureObjects" type="tns:SignatureObjectsType"/>
  <xs:complexType name="SignatureObjectsType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="ExtendedSignatureObject" type="tns:ExtendedSignatureObjectType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ExtendedSignatureObjectType">
    <xs:complexContent>
      <xs:extension base="tns:SignatureObjectType">
        <xs:sequence/>
        <xs:attribute name="WhichDocument" type="xs:ID"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SignatureObjectType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:Signature"/>
      <xs:element minOccurs="0" ref="ns2:Timestamp"/>
      <xs:element minOccurs="0" ref="ns2:Base64Signature"/>
      <xs:element minOccurs="0" ref="ns2:SignaturePtr"/>
      <xs:element minOccurs="0" name="Other" type="ns2:AnyType"/>
    </xs:sequence>
    <xs:attribute name="SchemaRefs">
      <xs:simpleType>
        <xs:list itemType="xs:IDREF"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CertificateRequestType">
    <xs:sequence>
      <xs:element name="DistinguishedName" type="xs:string"/>
      <xs:element minOccurs="0" name="StepUpAuthorisation" type="tns:StepUpAuthorisationType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StepUpAuthorisationType">
    <xs:sequence>
      <xs:element minOccurs="0" name="MobileID" type="tns:MobileIDType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MobileIDType">
    <xs:sequence>
      <xs:element name="MSISDN" type="xs:string"/>
      <xs:element name="Message" type="xs:string"/>
      <xs:element name="Language" type="tns:MobileIDLanguage"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:simpleType name="MobileIDLanguage">
    <xs:restriction base="xs:string">
      <xs:enumeration value="EN"/>
      <xs:enumeration value="DE"/>
      <xs:enumeration value="FR"/>
      <xs:enumeration value="IT"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0">
<xs:attribute name="lang" type="xs:string"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="1.0">
<xs:element name="CanonicalizationMethod" type="tns:CanonicalizationMethodType"/>
<xs:element name="DSAKeyValue" type="tns:DSAKeyValueType"/>
<xs:element name="DigestMethod" type="tns:DigestMethodType"/>
<xs:element name="DigestValue" type="xs:base64Binary"/>
<xs:element name="KeyInfo" type="tns:KeyInfoType"/>
<xs:element name="KeyName" type="xs:string"/>
<xs:element name="KeyValue" type="tns:KeyValueType"/>
<xs:element name="Manifest" type="tns:ManifestType"/>
<xs:element name="MgmtData" type="xs:string"/>
<xs:element name="Object" type="tns:ObjectType"/>
<xs:element name="PGPData" type="tns:PGPDataType"/>
<xs:element name="RSAKeyValue" type="tns:RSAKeyValueType"/>
<xs:element name="Reference" type="tns:ReferenceType"/>
<xs:element name="RetrievalMethod" type="tns:RetrievalMethodType"/>
<xs:element name="SPKIData" type="tns:SPKIDataType"/>
<xs:element name="Signature" type="tns:SignatureType"/>
<xs:element name="SignatureMethod" type="tns:SignatureMethodType"/>
<xs:element name="SignatureProperties" type="tns:SignaturePropertiesType"/>
<xs:element name="SignatureProperty" type="tns:SignaturePropertyType"/>
<xs:element name="SignatureValue" type="tns:SignatureValueType"/>
<xs:element name="SignedInfo" type="tns:SignedInfoType"/>
<xs:element name="Transform" type="tns:TransformType"/>
<xs:element name="Transforms" type="tns:TransformsType"/>
<xs:element name="X509Data" type="tns:X509DataType"/>
<xs:complexType name="SignatureType">
    <xs:sequence>
      <xs:element name="SignedInfo" type="tns:SignedInfoType"/>
      <xs:element name="SignatureValue" type="tns:SignatureValueType"/>
      <xs:element minOccurs="0" name="KeyInfo" type="tns:KeyInfoType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Object" type="tns:ObjectType"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
<xs:complexType name="SignedInfoType">
    <xs:sequence>
      <xs:element name="CanonicalizationMethod" type="tns:CanonicalizationMethodType"/>
      <xs:element name="SignatureMethod" type="tns:SignatureMethodType"/>
      <xs:element maxOccurs="unbounded" name="Reference" type="tns:ReferenceType"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
<xs:complexType mixed="true" name="CanonicalizationMethodType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType name="X509IssuerSerialType">
    <xs:sequence>
      <xs:element name="X509IssuerName" type="xs:string"/>
      <xs:element name="X509SerialNumber" type="xs:integer"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="PGPDataType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="PGPKeyID" type="xs:base64Binary"/>
        <xs:element name="PGPKeyPacket" type="xs:base64Binary"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="SPKIDataType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="SPKISexp" type="xs:base64Binary"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="RetrievalMethodType">
    <xs:sequence>
      <xs:element minOccurs="0" name="Transforms" type="tns:TransformsType"/>
    </xs:sequence>
    <xs:attribute name="URI" type="xs:anyURI"/>
    <xs:attribute name="Type" type="xs:anyURI"/>
  </xs:complexType>
<xs:complexType name="TransformsType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Transform" type="tns:TransformType"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType mixed="true" name="TransformType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="XPath" type="xs:string"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType mixed="true" name="SignaturePropertyType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Target" type="xs:anyURI" use="required"/>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
<xs:complexType name="ManifestType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Reference" type="tns:ReferenceType"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
<xs:complexType name="ReferenceType">
    <xs:sequence>
      <xs:element minOccurs="0" name="Transforms" type="tns:TransformsType"/>
      <xs:element name="DigestMethod" type="tns:DigestMethodType"/>
      <xs:element name="DigestValue" type="xs:base64Binary"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
    <xs:attribute name="URI" type="xs:anyURI"/>
    <xs:attribute name="Type" type="xs:anyURI"/>
  </xs:complexType>
<xs:complexType mixed="true" name="DigestMethodType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType mixed="true" name="SignatureMethodType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="HMACOutputLength" type="xs:integer"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
  </xs:complexType>
<xs:complexType mixed="true" name="KeyInfoType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="tns:PGPData"/>
        <xs:element ref="tns:KeyValue"/>
        <xs:element ref="tns:MgmtData"/>
        <xs:element ref="tns:X509Data"/>
        <xs:element ref="tns:SPKIData"/>
        <xs:element ref="tns:KeyName"/>
        <xs:element ref="tns:RetrievalMethod"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
<xs:complexType name="RSAKeyValueType">
    <xs:sequence>
      <xs:element name="Modulus" type="xs:base64Binary"/>
      <xs:element name="Exponent" type="xs:base64Binary"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="DSAKeyValueType">
    <xs:sequence>
      <xs:element minOccurs="0" name="P" type="xs:base64Binary"/>
      <xs:element minOccurs="0" name="Q" type="xs:base64Binary"/>
      <xs:element minOccurs="0" name="G" type="xs:base64Binary"/>
      <xs:element name="Y" type="xs:base64Binary"/>
      <xs:element minOccurs="0" name="J" type="xs:base64Binary"/>
      <xs:element minOccurs="0" name="Seed" type="xs:base64Binary"/>
      <xs:element minOccurs="0" name="PgenCounter" type="xs:base64Binary"/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="SignatureValueType">
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute name="Id" type="xs:ID"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
<xs:complexType name="X509DataType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="X509SubjectName" type="xs:string"/>
        <xs:element name="X509CRL" type="xs:base64Binary"/>
        <xs:element name="X509IssuerSerial" type="tns:X509IssuerSerialType"/>
        <xs:element name="X509Certificate" type="xs:base64Binary"/>
        <xs:element name="X509SKI" type="xs:base64Binary"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name="SignaturePropertiesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="SignatureProperty" type="tns:SignaturePropertyType"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
<xs:complexType mixed="true" name="KeyValueType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="tns:RSAKeyValue"/>
        <xs:element ref="tns:DSAKeyValue"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
<xs:complexType mixed="true" name="ObjectType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
    <xs:attribute name="MimeType" type="xs:string"/>
    <xs:attribute name="Encoding" type="xs:anyURI"/>
  </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://service.ais.swisscom.com/" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns1="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://service.ais.swisscom.com/">
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"/>
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema"/>
  <xs:element name="pending" type="tns:pending"/>
  <xs:element name="pendingResponse" type="tns:pendingResponse"/>
  <xs:element name="sign" type="tns:sign"/>
  <xs:element name="signResponse" type="tns:signResponse"/>
  <xs:complexType name="pending">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:PendingRequest"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="pendingResponse">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns2:Response"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="sign">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns2:SignRequest"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="signResponse">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns2:SignResponse"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="sign">
    <wsdl:part element="ns1:sign" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="signResponse">
    <wsdl:part element="ns1:signResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pendingResponse">
    <wsdl:part element="ns1:pendingResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pending">
    <wsdl:part element="ns1:pending" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="IDigitalSignatureService">
    <wsdl:operation name="pending">
      <wsdl:input message="ns1:pending" name="pending">
    </wsdl:input>
      <wsdl:output message="ns1:pendingResponse" name="pendingResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <wsdl:input message="ns1:sign" name="sign">
    </wsdl:input>
      <wsdl:output message="ns1:signResponse" name="signResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>